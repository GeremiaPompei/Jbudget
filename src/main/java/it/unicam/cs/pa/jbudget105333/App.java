/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package it.unicam.cs.pa.jbudget105333;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;

public class App {

    private Controller<BudgetReport> controller = null;
    private View<Controller<BudgetReport>> view = null;

    public App(Controller controller, View view) {
        this.controller = controller;
        this.view = view;
    }

    public static void main(String[] args) {
        try {
            createAppBase().start();
        }catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void start() throws IOException {
        this.view.open(this.controller);
        this.view.close();
    }

    private static App createAppBase() throws IOException {
        Budget budget = new BudgetBase();
        Ledger ledger = new LedgerBase();
        BudgetReportBase budgetReport = new BudgetReportBase(ledger,budget);
        FileStore<BudgetReportBase> store = new FileStore(budgetReport);
        Controller<BudgetReport> controller = new ControllerBase(store.read(),store);
        View view = new ConsoleView();
        controller.addCommands(createBasicCommands());
        controller.addCommand("help",c->System.out.println(c.getCommands().toString()));
        return  new App(controller,view);
    }

    private static Map<String, Consumer<Controller<BudgetReport>>> createBasicCommands(){
        Map<String, Consumer<Controller<BudgetReport>>> commands = new HashMap<>();
        commands.put("exit",c->c.shutdown());
        commands.put("newitransaction",c->System.out.println("instantTransactionMode"));
        commands.put("newptransaction",c->System.out.println("newptransaction date(AAAA-MM-DD)"));
        commands.put("newaccount",c->System.out.println("newAccount name,description,openingBalance,accountType"));
        commands.put("newtag",c->System.out.println("newTag name,description"));
        commands.put("newbudget",c->System.out.println("newBudget tagID,value"));
        commands.put("showtags",c->c.getBudgetReport().getLedger().getTags().stream()
                    .forEach(t->System.out.println(new TagBasePrinter<>().stringOf(t))));
        commands.put("showbudgets",c->System.out.println
                (new BudgetBasePrinter().stringOf(c.getBudgetReport().getBudget())));
        commands.put("showalltransactions",c->c.getBudgetReport().getLedger().getTransactions().stream()
                .forEach(t->System.out.println(new TransactionPrinter().stringOf(t))));
        return commands;
    }

}
